service: recipe-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  environment:
    RECIPES_TABLE_NAME: ${self:custom.RecipesTable.name}
    RECIPE_QUEUE_URL: ${self:custom.RecipeQueue.url}
  iamRoleStatements:
    - ${file(iam/RecipesTableIAM.yml):RecipesTableIAM}
    - ${file(iam/RecipeQueueIAM.yml):RecipeQueueIAM}

resources:
  Resources:
    RecipesTable: ${file(resources/RecipesTable.yml):RecipesTable}
    RecipeQueue: ${file(resources/RecipeQueue.yml):RecipeQueue}
  Outputs:
    RecipeQueueArn: ${file(resources/RecipeQueue.yml):Outputs.RecipeQueueArn}
    RecipeQueueUrl: ${file(resources/RecipeQueue.yml):Outputs.RecipeQueueUrl}
functions:
  createRecipe:
    handler: src/handlers/createRecipe.handler
    events:
      - http:
          method: POST
          path: /recipe
  getRecipes:
    handler: src/handlers/getRecipes.handler
    events:
      - http:
          method: GET
          path: /recipes
  getRecipe:
    handler: src/handlers/getRecipe.handler
    events:
      - http:
          method: GET
          path: /recipe/{id}

custom:
  RecipesTable:
    name: !Ref RecipesTable
    arn: !GetAtt RecipesTable.Arn
  RecipeQueue:
    name: recipe-queue-${self:provider.stage}
    arn: !GetAtt RecipeQueue.Arn
    url: !Ref RecipeQueue
